@using BusesControl.Models.Enums
@model List<Financeiro>
<link rel="stylesheet" href="~/css/financeiro.css">
<link rel="stylesheet" href="~/css/home.css">
@if (TempData["MensagemDeSucesso"] != null) {
    <div class="alert alert-success" role="alert">
        @TempData["MensagemDeSucesso"]
        <button type="button" class="btn btn-danger btn-sm close-alert sucesso" aria-label="Close"> X </button>
    </div>
}
@if (TempData["MensagemDeErro"] != null) {
    <div class="alert alert-danger" role="alert">
        @TempData["MensagemDeErro"]
        <button type="button" class="btn btn-danger btn-sm close-alert erro" aria-label="Close"> X </button>
    </div>
}
<section class="clientes">
    @if (Model.Any(x => x.DespesaReceita == DespesaReceita.Despesa)) {
        <h3 id="bac" style="color: darkorange;">
            <i class="fa fa-file-invoice-dollar"></i> @ViewData["Title"]
            <hr style="margin-top: 3px;">
        </h3>
    }
    else {
        <h3 id="bac">
            <i class="fa fa-file-invoice-dollar"></i> @ViewData["Title"]
            <hr style="margin-top: 3px;">
        </h3>
    }
    <div class="cliente">
        <div class="flex-item" style="margin-botton: -5px;">
            <div>
            </div>
            <div>
                <a asp-action="NovaReceita" asp-controller="Financeiro" class="btn filtrar_btn enum">+ Receita</a>
                <a asp-action="NovaDespesa" asp-controller="Financeiro" class="btn filtrar_btn terminado">+ Despesa</a>
            </div>
        </div>
        <table id="table-contrato" class="table shadow-sm p-3 mb-5 bg-white rounded display" style="width: 100%;">
            <thead>
                <tr>
                    <th style="font-size: 9pt;">ID</th>
                    <th style="font-size: 9pt;">Contrato ID</th>
                    <th style="font-size: 9pt;">Credor/Devedor</th>
                    <th style="font-size: 9pt;">Receita/Despesa.</th>
                    <th style="font-size: 9pt;">Val total</th>
                    <th style="font-size: 9pt;">Val efetuado.</th>
                    <th style="font-size: 9pt;">Vencimento</th>
                    <th style="font-size: 9pt;">Pagamento</th>
                    <th style="font-size: 9pt;">Efetuações</th>
                    <th style="font-size: 9pt;">Opção</th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null || Model.Any()) {
                    @foreach (var item in Model) {
                        <tr class="row-hover">
                            <td>@item.Id</td>
                            <td>@item.ContratoId</td>
                            <td>@item.ReturnNameClienteOrCredor()</td>
                            <td>@item.ReturnTypeFinanceiro()</td>
                            <td>@item.ReturnValorTot()</td>
                            <td>@item.ReturnValorTotEfetuado()</td>
                            <td>@Html.DisplayFor(x => item.DataVencimento)</td>
                            <td>@item.ReturnTypePagament()</td>
                            <td>
                                <a class="btn-financeiro" asp-route-id="@item.Id" asp-action="Contabilizar"><i class="fa fa-arrow-alt-circle-right"></i> Efetuar</a>
                            </td>
                            <td>
                                @if (!string.IsNullOrEmpty(item.ContratoId.ToString())) {
                                    <a class="link"><i class="fa fa-edit" style="color: rgb(61, 61, 61)"></i></a>
                                    <a class="link"><i class="fa fa-trash-alt" style="color: rgb(61, 61, 61)"></i></a>
                                }else{
                                    <a class="link" asp-route-id="@item.Id"><i class="fa fa-edit"></i></a>
                                    <a class="link-red" asp-route-id="@item.Id"><i class="fa fa-trash-alt"></i></a>
                                }
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</section>
<div id="listClientesIndex" class="modal">
    <div class="modal-dialog modal-md">
        <div class="modal-content modal-largura">
            <div class="modal-header">
                <h4 class="modal-title font">Clientes requerentes</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body body-modal-alt">
                <div id="list-clients" class="col-md-12 input-group form-group form-it">
                </div>
            </div>
        </div>
    </div>
</div>
<script src="~/js/site.js"></script>
<script src="~/js/jquery.min.js"></script>
<script src="~/js/mascaraMoney.js"></script>
<script src="~/Js copy/MascarDate.js"></script>
@section Scripts{
    <script>
        $(document).ready(function() {
            // Setup - add a text input to each footer cell
            $('#table-contrato thead tr')
                .clone(true)
                .addClass('filters')
                .appendTo('#table-contrato thead');
            var table = $('#table-contrato').DataTable({
                "ordering": true,
                "paging": true,
                "searching": true,
                "oLanguage": {
                    "sEmptyTable": "Não existe registros no sistema.",
                    "sInfo": "",
                    "sInfoEmpty": "",
                    "sInfoFiltered": "",
                    "sInfoPostFix": "",
                    "sInfoThousands": ".",
                    "sLengthMenu": "",
                    "sLoadingRecords": "Carregando...",
                    "sProcessing": "Processando...",
                    "sZeroRecords": "Sua pesquisa não encontrou nenhum registro correspondente.",
                    "sSearch": "Pesquisar:  ",
                    "oPaginate": {
                        "sNext": "Próximo",
                        "sPrevious": "Anterior",
                        "sFirst": "Primeiro",
                        "sLast": "Último"
                    },
                    "oAria": {
                        "sSortAscending": ": Ordenar colunas de forma ascendente",
                        "sSortDescending": ": Ordenar colunas de forma descendente"
                    }
                },
                initComplete: function() {
                    var api = this.api();

                    // For each column
                    api
                        .columns()
                        .eq(0)
                        .each(function(colIdx) {
                            // Set the header cell to contain the input element
                            var cell = $('.filters th').eq(
                                $(api.column(colIdx).header()).index()
                            );
                            var title = $(cell).text();
                            if (title == "Vencimento") {
                                $(cell).html('<div class="table-pai"><input maxlength="10" onkeyup="mascara_data(this, this.value)" class="input-table" type="text" placeholder="' + title + '"/></div>');
                            }
                            else if (title == "Cliente") {
                                $(cell).html('<div class="table-pai"></div>');
                            }
                            else if (title == "Valor total") {
                                $(cell).html('<div class="table-pai"><input class="input-table" onkeyup="mascaraMoeda(this, event)" type="text" placeholder="' + title + '" /></div>');
                            }
                            else {
                                $(cell).html('<div class="table-pai"><input class="input-table" type="text" placeholder="' + title + '" /></div>');
                            }
                            // On every keypress in this input
                            $(
                                'input',
                                $('.filters th').eq($(api.column(colIdx).header()).index())
                            )
                                .off('keyup change')
                                .on('change', function(e) {
                                    // Get the search value
                                    $(this).attr('title', $(this).val());
                                    var regexr = '({search})'; //$(this).parents('th').find('select').val();

                                    var cursorPosition = this.selectionStart;
                                    // Search the column for that value
                                    api
                                        .column(colIdx)
                                        .search(
                                            this.value != ''
                                                ? regexr.replace('{search}', '(((' + this.value + ')))')
                                                : '',
                                            this.value != '',
                                            this.value == ''
                                        )
                                        .draw();
                                })
                                .on('keyup', function(e) {
                                    e.stopPropagation();

                                    $(this).trigger('change');
                                    $(this)
                                        .focus()[0]
                                        .setSelectionRange(cursorPosition, cursorPosition);
                                });
                        });
                },
            });
        });
    </script>
}